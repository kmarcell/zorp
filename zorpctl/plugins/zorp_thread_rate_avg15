#!/usr/bin/env python
# vim: ft=python
"""
=head1 NAME

Zorp thread rate average 15 - Plugin to monitor the average rate of threads in Zorp

=head1 CONFIGURATION

No configuration

=head1 AUTHOR

Marcell Kresz

=head1 LICENSE

GNU GPL

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf
"""

import sys

from zorpctl.Munin import *
from zorpctl.Instances import InstanceHandler

if len(sys.argv) > 1:
    if sys.argv[1] == "autoconf":
        print("yes")

    if sys.argv[1] == "config":
        print('graph_title Average Rate of threads 15min')
        print('graph_vlabel average rate of threads')
        print('graph_category zorp')
        print('graph_info This graph shows the 15min average rate of running threads in Zorp.')
        for instance in RunningInstances():
            print("%s.label %s" % (instance.name, instance.name))
else:
    """
    Minus one return value indicates error!
    """
    algorithm = GetThreadRateAlgorithm()
    for instance in RunningInstances():
        results = InstanceHandler.executeAlgorithmOnInstanceProcesses(instance, algorithm)
        sum_avg15 = 0
        for result in results:
            if result:
                sum_avg15 += result.value["avg15"]
            else:
                sum_avg15 = None
                break
        if sum_avg15 != None:
            print("%s.value %d" % (instance.name, sum_avg15 / len(results)))
        else:
            print("%s.value -1" % instance.name)

